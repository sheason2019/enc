syntax = "proto3";
package sheason_chat;

message AccountSecret {
  string ecdh_pub_key = 1;
  string ecdh_priv_key = 2;
  string sign_pub_key = 3;
  string sign_priv_key = 4;
}

message AccountIndex {
  string ecdh_pub_key = 1;
  string sign_pub_key = 2;
}

message AccountSnapshot {
  AccountIndex index = 1;
  string username = 2;
  string avatar_url = 3;
  map<string, PortableService> serviceMap = 4;
  int32 version = 5;
}

message PortableService {}

enum EncryptType {
  ENCRYPT_TYPE_NONE = 0;
  ENCRYPT_TYPE_SHARED_SECRET = 1;
  ENCRYPT_TYPE_DECLARED_SECRET = 2;
}

message PortableSecretBox {
  bytes cipher_data = 1;
  bytes nonce = 2;
  bytes mac = 3;
  AccountIndex sender = 4;
  AccountIndex receiver = 5;
  EncryptType encrypt_type = 6;
  int32 declared_key = 7;
}

enum OperationType {
  UNKNOWN_OPEARTION = 0;
  PUT_USERNAME = 1;
  PUT_SERVICE = 2;
  PUT_CONTACT = 3;
  PUT_CONVERSATION = 4;
  PUT_CONVERSATION_ANCHOR = 5;
  PUT_MESSAGE = 6;
  PUT_AVATAR = 7;

  DELETE_SERVICE = 101;
}

message PortableOperation {
  string client_id = 1; // 设备ID
  int32 clock = 2; // Opaeration 链表
  OperationType type = 5;
  string content = 6;
}

enum ConversationType {
  CONVERSATION_UNKNOWN = 0;
  CONVERSATION_PRIVATE = 1;
  CONVERSATION_GROUP = 2;
}

message PortableConversation {
  ConversationType type = 1;
  repeated AccountSnapshot members = 2;
  
  AccountSnapshot owner = 3;
  string remote_url = 4;
  repeated bytes declared_secrets = 5;
  AccountIndex agent = 6;

  int32 version = 7;
}

enum MessageType {
  MESSAGE_TYPE_UNKNOWN = 0;
  MESSAGE_TYPE_TEXT = 1;
  MESSAGE_TYPE_AUDIO = 2;
  MESSAGE_TYPE_IMAGE = 3;
  MESSAGE_TYPE_VIDEO = 4;
  MESSAGE_TYPE_FILE = 5;
  MESSAGE_TYPE_RTC = 6;
  MESSAGE_TYPE_STATE_ONLY = 101;
  MESSAGE_TYPE_NOTIFY = 102;
  MESSAGE_TYPE_CONVERSATION_UPGRADE = 103;
}

message PortableMessage {
  string uuid = 1;
  MessageType message_type = 2;
  string content = 3;
  AccountSnapshot sender = 4;
  PortableConversation conversation = 5;
  repeated PortableMessageState message_states = 6;
  int64 created_at = 7;
}

message PortableMessageState {
  AccountIndex account_index = 1;
  int64 created_at = 2;
  int64 receive_at = 3;
  int64 checked_at = 4;
}

enum ContentType {
  CONTENT_BUFFER = 0;
  CONTENT_MESSAGE = 1;
  CONTENT_OPERATION = 2;
  CONTENT_CONVERSATION = 3;
}

message SignWrapper {
  AccountIndex signer = 1;
  bytes buffer = 2;
  bytes sign = 3;
  bool encrypt = 4; // 内容是否为 PortableSecretBox
  ContentType content_type = 5;
}
